package desafio3;

import java.util.ArrayList;


public class Main {
    static ArrayList<String> lista = new ArrayList<String>();


	public static void main(String[] args) {
		int num = 0;
		
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;
		ePar(num);
		num+=1;

	}
	
	public static void ePar(int num) {
		if(num % 2 == 0) {
			lista.add(Integer.toString(num));
			if(num == 1000) {
				System.out.println(lista);
			}
		}
	}


}
